# Default configuration
server:
  port: 8080

spring:
  application:
    name: cold-email-app

  # ENHANCED: Multipart file upload settings for multiple files
  servlet:
    multipart:
      max-file-size: 10MB          # Individual file limit
      max-request-size: 100MB      # INCREASED: Total request size for multiple files
      location: ${java.io.tmpdir}  # Temporary file storage location
      resolve-lazily: false        # Process files immediately

  # JSON Configuration
  jackson:
    default-property-inclusion: NON_NULL

# Google OAuth Configuration (unchanged)
google:
  oauth:
    client-id: ${GOOGLE_OAUTH_CLIENT_ID:}
    client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET:}
    redirect-uri: ${GOOGLE_OAUTH_REDIRECT_URI:http://localhost:8080/api/auth/callback}

# Custom Application Properties
app:
  # CORS Configuration
  frontend:
    url: http://localhost:3000
  cors:
    additional-origins: []

  # NEW: File processing configuration
  file-processing:
    temp-directory: ${java.io.tmpdir}/cold-email-temp
    cleanup-delay-seconds: 300     # Clean up temp files after 5 minutes
    max-files-per-request: 50      # Maximum files per upload

# Logging Configuration
logging:
  level:
    com.coldemail: INFO
    org.springframework.web.multipart: DEBUG  # NEW: Debug multipart uploads
    root: WARN

# Management Configuration (Health checks)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized

---
# Local Profile (unchanged existing content)
spring:
  config:
    activate:
      on-profile: local

google:
  oauth:
    client-id: your-client-id.apps.googleusercontent.com
    client-secret: your-client-secret
    redirect-uri: http://localhost:8080/api/auth/callback

app:
  frontend:
    url: http://localhost:3000

logging:
  level:
    com.coldemail: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

app:
  frontend:
    url: http://localhost:3000
  cors:
    additional-origins:
      - http://localhost:3001
      - http://localhost:8080

logging:
  level:
    com.coldemail: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod

# ENHANCED: Production file upload limits
  servlet:
    multipart:
      max-file-size: 50MB          # Larger individual files in production
      max-request-size: 500MB      # Larger total request size in production

app:
  frontend:
    url: ${FRONTEND_URL:https://cold-email-app.netlify.app}
  cors:
    additional-origins:
      - https://cold-email-app.netlify.app

google:
  oauth:
    redirect-uri: ${GOOGLE_OAUTH_REDIRECT_URI:https://cold-email-app-backend.onrender.com/api/auth/callback}

logging:
  level:
    root: WARN
    com.coldemail: INFO
  file:
    name: /var/log/cold-email-app.log

---
# Testing Profile (unchanged)
spring:
  config:
    activate:
      on-profile: test

logging:
  level:
    root: WARN
    com.coldemail: DEBUG

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker

server:
  port: 8080

app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}
  cors:
    additional-origins:
      - http://localhost:3000
      - http://localhost:3001
      - http://host.docker.internal:3000
      - https://cold-email-app.netlify.app

google:
  oauth:
    redirect-uri: ${GOOGLE_OAUTH_REDIRECT_URI:http://localhost:8080/api/auth/callback}

logging:
  level:
    root: INFO
    com.coldemail: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"